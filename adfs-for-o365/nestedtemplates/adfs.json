{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "Description": "The name of the Virtual Network to Create"
      },
      "defaultValue": "VNet"
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "Description": "The name of the subnet created in the new VNET"
      },
      "defaultValue": "internalsubnet"
    },
        "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "Description": "The address range of the new VNET in CIDR format"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "internalsubnetRange": {
      "type": "string",
      "metadata": {
        "Description": "The address range of the subnet created in the new VNET"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "dmzsubnetName": {
      "type": "string",
      "metadata": {
        "Description": "The name of the subnet created in the new VNET"
      },
      "defaultValue": "dmzsubnet"
    },
    "dmzsubnetRange": {
      "type": "string",
      "metadata": {
        "Description": "The address range of the subnet created in the new VNET"
      },
      "defaultValue": "10.0.1.0/29"
    },
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new storage account created to store the VMs disks"
      },
      "defaultValue": "evanbaadfs3"},
    "domainAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      },
      "defaultValue": "adfsforo365"},
    "domainAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
        },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
        },
        "defaultValue": "corpeotd.info"},
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS prefix for the public IP address used by the Load Balancer"
      },
      "defaultValue": "corpeotdadfs3"
    },
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },
    "numberofservers": {
        "type": "int",
        "metadata": {
        "description": "The number of ADFS servers in the farm"
      },
      "defaultValue": 1
    },
    "adfsServerNamingConvention": {
      "type": "string",
      "minLength": 1,
      "metadata": {
          "description": "Naming convention for ADFS nodes. For example, input 'ADFS' if you want them to be named ADFS1, ADFS2"
      },
      "defaultValue": "ADFS"},
    "adfsVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14",
        "Standard_D1_v2",
        "Standard_DS1_v2",
        "Standard_D2_v2",
        "Standard_DS2_v2",
        "Standard_D3_v2",
        "Standard_DS3_v2",
        "Standard_D4_v2",
        "Standard_DS4_v2",
        "Standard_D11_v2",
        "Standard_DS11_v2",
        "Standard_D12_v2",
        "Standard_DS12_v2",
        "Standard_D13_v2",
        "Standard_DS13_v2",
        "Standard_D14_v2",
        "Standard_DS14_v2"
      ],
      "metadata": {
        "description": "The size of the ADFS VMs created"
      },
      "defaultValue": "Standard_DS2_v2"
      },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"}
        },


    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }},
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }},
    "imageSKU": {      
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }},
    "adfsLBIPAddress":
    {
      "type": "string",
      "metadata": {
        "description": "IP address for the ADFS load balancer"
      },
      "defaultValue": "10.0.0.200"
    }
    },
  "variables": {
    "DNSServers": "[concat('10.0.0.4',',','10.0.0.5')]",
    "adfsILBName": "adfsILB",
    "adfsILBFEName": "[concat(variables('adfsILBName'),'FE')]",
    "adfsILBBEName": "[concat(variables('adfsILBName'),'BE')]",
    "adfsILBID": "[resourceId('Microsoft.Network/loadBalancers',variables('adfsILBName'))]",
    "adfsILBFEConfigID": "[concat(variables('adfsILBID'),'/frontendIPConfigurations/',variables('adfsILBFEName'))]",
    "adfsILBBEAddressPoolID": "[concat(variables('adfsILBID'),'/backendAddressPools/',variables('adfsILBBEName'))]",
    "adfsILBIPAddressName": "adfs-ILBIP",
    "adfsILBProbesIDBase": "[concat(variables('adfsILBID'),'/Probes/')]",
    "adfsELBName": "adfsELB",
    "adfsELBFEName": "[concat(variables('adfsELBName'),'FE')]",
    "adfsELBBEName": "[concat(variables('adfsELBName'),'BE')]",
    "adfsELBID": "[resourceId('Microsoft.Network/loadBalancers',variables('adfsELBName'))]",
    "adfsELBFEConfigID": "[concat(variables('adfsELBID'),'/frontendIPConfigurations/',variables('adfsELBFEName'))]",
    "adfsELBBEAddressPoolID": "[concat(variables('adfsELBID'),'/backendAddressPools/',variables('adfsELBBEName'))]",
    "adfsELBProbesIDBase": "[concat(variables('adfsELBID'),'/Probes/')]",
    "adfsELBIPAddressName": "adfs-ELBIP",
    "adfsAvailabilitySetName": "adfs-availabilityset",
    "adfsNICName": "adfs-NIC",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('virtualNetworkName'),parameters('subnetName'))]"
  },
  "resources": [
        {
      "name": "[parameters('newStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2016-05-01",
      "location": "[resourceGroup().location]",
      "properties": {
      },
      "sku":{"name":"Premium_LRS"},
      "kind":"Storage"
    },
        {"name": "[parameters('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-10-01",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressRange')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('internalsubnetRange')]"
            }
          },
                    {
            "name": "[parameters('dmzsubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('dmzsubnetRange')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(parameters('subnetName'),'nsg')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
          "securityRules": [
              {
                  "name": "AllowHTTPSfromDMZ",
                  "properties": {
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "10.1.0.0/30",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound"
                  }
              },
              {
                  "name": "DenyInternetOutbound",
                  "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "Internet",
                      "access": "Deny",
                      "priority": 1100,
                      "direction": "Outbound"
                  }
              }
          ]
      },
      "resources": [],
      "dependsOn": []
    },
    {
    "type": "Microsoft.Network/networkSecurityGroups",
    "name": "[concat(parameters('dmzsubnetName'),'nsg')]",
    "apiVersion": "2016-03-30",
    "location": "[resourceGroup().location]",
    "properties": {
        "securityRules": [
            {
                "name": "AllowHTTPSfromDMZ",
                "properties": {
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "443",
                    "sourceAddressPrefix": "10.1.0.0/30",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 1000,
                    "direction": "Inbound"
                }
            },
            {
                "name": "DenyInternetOutbound",
                "properties": {
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "Internet",
                    "access": "Deny",
                    "priority": 1100,
                    "direction": "Outbound"
                }
            },
            {
                "name": "AllowHTTPSOutbound",
                "properties": {
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "443",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "Internet",
                    "access": "Allow",
                    "priority": 1010,
                    "direction": "Outbound"
                }
            }
        ]
    }
    },
{
    "name": "adfs-availabilityset",
    "type": "Microsoft.Compute/availabilitySets",
    "location": "[resourceGroup().location]",
    "apiVersion": "2015-06-15"
},
{
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('adfsELBName')]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
            "frontendIPConfigurations": [
                {
                    "name": "[variables('adfsELBFEName')]",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('adfsELBIPAddressName'))]"
                        }
                    }
                }
            ],
            "backendAddressPools": [
                {
                    "name": "[variables('adfsELBBEName')]"
                }
            ],
            "loadBalancingRules": [
            ],
            "probes": [
            ],
            "inboundNatRules": [
            ],
            "outboundNatRules": [],
            "inboundNatPools": []
        },
        "resources": [],
        "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('adfsELBIPAddressName'))]"
        ]
    },
    {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('adfsILBName')]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
            "frontendIPConfigurations": [
                {
                    "name": "[variables('adfsILBFEName')]",
                    "properties": {
                        "privateIPAddress": "10.0.0.200",
                        "privateIPAllocationMethod": "Static",
                        "subnet": {
                            "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/',parameters('subnetName'))]"
                        }
                    }
                }
            ],
            "backendAddressPools": [
                {
                    "name": "[variables('adfsILBBEName')]"
                }
            ],
            "loadBalancingRules": [
                {
                    "name": "adfs-ILB-balancingrule-80",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "[variables('adfsILBFEConfigID')]"
                        },
                        "frontendPort": 80,
                        "backendPort": 80,
                        "enableFloatingIP": false,
                        "idleTimeoutInMinutes": 4,
                        "protocol": "Tcp",
                        "loadDistribution": "Default",
                        "backendAddressPool": {
                            "id": "[variables('adfsILBBEAddressPoolID')]"
                        },
                        "probe": {
                            "id": "[concat(variables('adfsILBProbesIDBase'),'adfs-ILB-probe-80')]"
                        }
                    }
                },
                                    {
                    "name": "adfs-ILB-balancingrule-443",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "[variables('adfsILBFEConfigID')]"
                        },
                        "frontendPort": 443,
                        "backendPort": 443,
                        "enableFloatingIP": false,
                        "idleTimeoutInMinutes": 4,
                        "protocol": "Tcp",
                        "loadDistribution": "Default",
                        "backendAddressPool": {
                            "id": "[variables('adfsILBBEAddressPoolID')]"
                        },
                        "probe": {
                            "id": "[concat(variables('adfsILBProbesIDBase'),'adfs-ILB-probe-443')]"
                        }
                    }
                }
            ],
            "probes": [
                {
                    "name": "adfs-ILB-probe-80",
                    "properties": {
                        "protocol": "Tcp",
                        "port": 80,
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2
                    }
                },
                {
                    "name": "adfs-ILB-probe-443",
                    "properties": {
                        "protocol": "Http",
                        "port": 443,
                        "requestPath": "/",
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2
                    }
                }
            ],
            "inboundNatRules": [],
            "outboundNatRules": [],
            "inboundNatPools": []
        },
        "resources": [],
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
        ]
    },
    {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('adfsELBIPAddressName')]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "idleTimeoutInMinutes": 4
        },
        "resources": [],
        "dependsOn": []
    },
    {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(parameters('adfsServerNamingConvention'),copyIndex())]",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "copy": {
            "name": "VMLoop",
            "count": "[parameters('numberofservers')]"
        },
        "properties": {
            "availabilitySet": {
                "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adfsAvailabilitySetName'))]"
            },
            "hardwareProfile": {
                "vmSize": "[parameters('adfsVMSize')]"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "[parameters('imagePublisher')]",
                    "offer": "[parameters('imageOffer')]",
                    "sku": "[parameters('imageSKU')]",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "[concat(parameters('adfsServerNamingConvention'),'osdisk',copyIndex())]",
                    "createOption": "FromImage",
                    "vhd": {
                        "uri": "[concat('https', '://', parameters('newStorageAccountName'), '.blob.core.windows.net', concat('/vhds/', concat(parameters('adfsServerNamingConvention'),copyIndex()),'.vhd'))]"
                    },
                    "caching": "ReadWrite"
                },
                "dataDisks": []
            },
            "osProfile": {
                "computerName": "[concat(parameters('adfsServerNamingConvention'),copyIndex())]",
                "adminUsername": "[parameters('vmAdminUsername')]",
                "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true
                },
                "secrets": [],
                "adminPassword": "[parameters('vmadminPassword')]"
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('adfsNICName'),copyIndex()))]",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('subnetName'),'-nsg'))]"
                            }           
                    }
                ]
            }
        },
        "resources": [],
        "dependsOn": [
            "[resourceId('Microsoft.Compute/availabilitySets', variables('adfsAvailabilitySetName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('newStorageAccountName'))]",
            "[resourceId('Microsoft.Network/networkInterfaces', variables('adfsNICName'))]"
        ]
    },
    {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('adfsNICName')]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/internalsubnet')]"
                    },
                    "loadBalancerBackendAddressPools": [
                            {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('adfsILBName')), concat('/backendAddressPools/',variables('adfsILBBEName')))]"
                            },
                            {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('adfsELBName')), concat('/backendAddressPools/',variables('adfsELBBEName')))]"
                            }
                        ]
                    }
                }
            ],
            "enableIPForwarding": false,
            "dnsSettings": {
                "dnsServers": "[variables('DNSServers')]"
                }
        },
        "resources": [],
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
            "[resourceId('Microsoft.Network/loadBalancers', variables('adfsILBName'))]",
            "[resourceId('Microsoft.Network/loadBalancers', variables('adfsELBName'))]"
        ]
    },
    {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('adfsNICname'), copyindex())]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "copy": {
            "name": "nicLoop",
            "count": "[parameters('numberofservers')]"
        },
        "dependsOn": [
        "[parameters('virtualNetworkName')]"
        ],
        "properties": {
        "ipConfigurations": [
            {
            "name": "ipconfig1",
            "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                "id": "[variables('subnetRef')]"
                }
            }
            }
        ],
        "dnsSettings": {
            "dnsServers": [
                "10.0.0.4"
                ]
            }     
        }
    },
    {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('adfsServerNamingConvention'),copyIndex(),'/joindomain')]",
        "copy": {
            "name": "nicLoop",
            "count": "[parameters('numberofservers')]"
        },
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('adfsServerNamingConvention'),copyIndex()))]"
        ],
        "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "Name": "[parameters('domainName')]",
                "OUPath": "",
                "User": "[concat(parameters('domainName'), '\\', parameters('domainadminUsername'))]",
                "Restart": "true",
                "Options": "[parameters('domainJoinOptions')]"
            },
            "protectedsettings": {
            "Password": "[parameters('domainadminPassword')]"
            }
        }
    }
  ]
}