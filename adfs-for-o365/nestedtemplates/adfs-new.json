{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
		"existingVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "Description": "The name of the existing virtual network"
      },
      "defaultValue": "VNET"
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "Description": "The ID of the existing subnet in the existing virtual network"
      },
      "defaultValue": "internalsubnet"
    },
		"existingVirtualNetworkResourceGroup":{
      "type": "string",
      "metadata": {
        "Description": "The resource group of the existing VNET"
      },
      "defaultValue": "adfs3"
    },
    "domainAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      },
      "defaultValue": "adfsforo365"},
    "domainAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
        },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
        },
        "defaultValue": "corpeotd.info"},
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS prefix for the public IP address used by the Load Balancer"
      },
      "defaultValue": "corpeotdadfs3"
    },
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator"
      },
			"defaultValue": "adfsVMAdmin"
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },
    "numberofservers": {
        "type": "int",
        "metadata": {
        "description": "The number of ADFS servers in the farm"
      },
      "defaultValue": 1
    },
    "adfsServerNamingConvention": {
      "type": "string",
      "minLength": 1,
      "metadata": {
          "description": "Naming convention for ADFS nodes. For example, input 'ADFS' if you want them to be named ADFS1, ADFS2"
      },
      "defaultValue": "ADFS"},
    "adfsVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14",
        "Standard_D1_v2",
        "Standard_DS1_v2",
        "Standard_D2_v2",
        "Standard_DS2_v2",
        "Standard_D3_v2",
        "Standard_DS3_v2",
        "Standard_D4_v2",
        "Standard_DS4_v2",
        "Standard_D11_v2",
        "Standard_DS11_v2",
        "Standard_D12_v2",
        "Standard_DS12_v2",
        "Standard_D13_v2",
        "Standard_DS13_v2",
        "Standard_D14_v2",
        "Standard_DS14_v2"
      ],
      "metadata": {
        "description": "The size of the ADFS VMs created"
      },
      "defaultValue": "Standard_DS1_v2"
      },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"}
        },


    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }},
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }},
    "imageSKU": {      
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }
		},
		"storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },
    "adfsLBIPAddress":
    {
      "type": "string",
      "metadata": {
        "description": "IP address for the ADFS load balancer"
      },
      "defaultValue": "10.0.0.200"
    }
    },
  "variables": {
    "adfsStorageAccountName":"[concat('adfs',uniqueString(resourceGroup().id))]",
    "adfsILBName": "adfs-ILB",
    "adfsILBFEName": "[concat(variables('adfsILBName'),'FE')]",
    "adfsILBBEName": "[concat(variables('adfsILBName'),'BE')]",
    "adfsILBID": "[resourceId('Microsoft.Network/loadBalancers',variables('adfsILBName'))]",
    "adfsILBFEConfigID": "[concat(variables('adfsILBID'),'/frontendIPConfigurations/',variables('adfsILBFEName'))]",
    "adfsILBBEAddressPoolID": "[concat(variables('adfsILBID'),'/backendAddressPools/',variables('adfsILBBEName'))]",
    "adfsILBIPAddressName": "adfs-ILBIP",
    "adfsILBProbesIDBase": "[concat(variables('adfsILBID'),'/Probes/')]",
    "adfsELBName": "adfsELB",
    "adfsELBFEName": "[concat(variables('adfsELBName'),'FE')]",
    "adfsELBBEName": "[concat(variables('adfsELBName'),'BE')]",
    "adfsELBID": "[resourceId('Microsoft.Network/loadBalancers',variables('adfsELBName'))]",
    "adfsELBFEConfigID": "[concat(variables('adfsELBID'),'/frontendIPConfigurations/',variables('adfsELBFEName'))]",
    "adfsELBBEAddressPoolID": "[concat(variables('adfsELBID'),'/backendAddressPools/',variables('adfsELBBEName'))]",
    "adfsELBProbesIDBase": "[concat(variables('adfsELBID'),'/Probes/')]",
    "adfsELBIPAddressName": "adfs-ELBIP",
    "adfsAvailabilitySetName": "adfs-availabilityset",
    "adfsNICName": "adfs-NIC",
		"vnetID": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName'))]",
    "adfssubnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]"
  },
   "resources": [
		{"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('adfsAvailabilitySetName')]",
			"apiVersion": "2015-06-15",
			"location": "[resourceGroup().location]",
			"properties": {}
		},
		{"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('adfsStorageAccountName'), copyindex())]",
			"apiVersion": "2015-06-15",
			"copy": {
				"name": "storageAccountLoop",
				"count": "[parameters('numberofservers')]"
			},
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},
    {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('adfsILBName')]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
            "frontendIPConfigurations": [
                {
                    "name": "[variables('adfsILBFEName')]",
                    "properties": {
                        "privateIPAddress": "10.0.0.200",
                        "privateIPAllocationMethod": "Static",
                        "subnet": {
                            "id": "[variables('adfssubnetRef')]"
                        }
                    }
                }
            ],
            "backendAddressPools": [
                {
                    "name": "[variables('adfsILBBEName')]"
                }
            ],
            "loadBalancingRules": [
                {
                    "name": "adfs-ILB-balancingrule-80",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "[variables('adfsILBFEConfigID')]"
                        },
                        "frontendPort": 80,
                        "backendPort": 80,
                        "enableFloatingIP": false,
                        "idleTimeoutInMinutes": 4,
                        "protocol": "Tcp",
                        "loadDistribution": "Default",
                        "backendAddressPool": {
                            "id": "[variables('adfsILBBEAddressPoolID')]"
                        },
                        "probe": {
                            "id": "[concat(variables('adfsILBProbesIDBase'),'adfs-ILB-probe-80')]"
                        }
                    }
                },
                                    {
                    "name": "adfs-ILB-balancingrule-443",
                    "properties": {
                        "frontendIPConfiguration": {
                            "id": "[variables('adfsILBFEConfigID')]"
                        },
                        "frontendPort": 443,
                        "backendPort": 443,
                        "enableFloatingIP": false,
                        "idleTimeoutInMinutes": 4,
                        "protocol": "Tcp",
                        "loadDistribution": "Default",
                        "backendAddressPool": {
                            "id": "[variables('adfsILBBEAddressPoolID')]"
                        },
                        "probe": {
                            "id": "[concat(variables('adfsILBProbesIDBase'),'adfs-ILB-probe-443')]"
                        }
                    }
                }
            ],
            "probes": [
                {
                    "name": "adfs-ILB-probe-80",
                    "properties": {
                        "protocol": "Tcp",
                        "port": 80,
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2
                    }
                },
                {
                    "name": "adfs-ILB-probe-443",
                    "properties": {
                        "protocol": "Http",
                        "port": 443,
                        "requestPath": "/",
                        "intervalInSeconds": 5,
                        "numberOfProbes": 2
                    }
                }
            ],
            "inboundNatRules": [],
            "outboundNatRules": [],
            "inboundNatPools": []
        },
        "resources": [],
        "dependsOn": [
            "[variables('vnetID')]"
        ]
    },
    {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('adfsELBIPAddressName')]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "idleTimeoutInMinutes": 4
        },
        "resources": [],
        "dependsOn": []
    },
		{"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('adfsNICName'), copyindex(), '-nic')]",
			"location": "[resourceGroup().location]",
			"apiVersion": "2015-06-15",
			"copy": {
				"name": "nicLoop",
				"count": "[parameters('numberofservers')]"
			},
			"dependsOn": [
				"[variables('adfsILBID')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('adfssubnetRef')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id": "[variables('adfsILBBEAddressPoolID')]"
								}
							]
						}
					}
				]
			}
		},
		{"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2015-06-15",
			"name": "[concat(parameters('adfsServerNamingConvention'), copyindex())]",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "virtualMachineLoop",
				"count": "[parameters('numberofservers')]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(variables('adfsStorageAccountName'),  copyindex()))]",
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('adfsNICName'), copyindex(), '-nic'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('adfsAvailabilitySetName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('adfsVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adfsAvailabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[concat(parameters('adfsServerNamingConvention'), copyindex())]",
					"adminUsername": "[parameters('vmadminUsername')]",
					"adminPassword": "[parameters('vmadminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('imagePublisher')",
						"offer": "[parameters('ImageOffer')]",
						"sku": "[parameters('ImageSKU')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "[concat(variables('adfsVMSize'), copyindex(), '-osdisk.vhd')]",
						"vhd": {
            	"uri": "[concat('https://', variables('adfsStorageAccountName'), '.blob.core.windows.net/vhds/', parameters('adfsServerNamingConvention'),copyIndex(),'.vhd')]"
 						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": []
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlNamePrefix'), copyindex(), '-nic'))]"
						}
					]
				}
			}
		},
		{"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(parameters('adfsServerNamingConvention'),copyIndex(),'/joindomain')]",
			"comments": "Join domain - JsonADDomainExtension",
			"apiVersion": "2015-06-15",
			"location": "[ResourceGroup().location]",
			"copy": {
					"name": "domainJoinExtensionLoop",
					"count": "[parameters('numberofservers')]"
					},
			"properties": {
					"publisher": "Microsoft.Compute",
					"type": "JsonADDomainExtension",
					"typeHandlerVersion": "1.3",
					"autoUpgradeMinorVersion": true,
					"settings": {
							"Name": "[parameters('domainName')]",
							"User": "[parameters('vmAdminUsername')]",
							"Restart": "true",
							"Options": "[parameters('domainJoinOptions')]"
					},
					"protectedsettings": {
							"Password": "[parameters('vmAdminPassword')]"
							}   
					}
		}
   ]
}